// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Модель пользователя
model User {
  id            String    @id @default(uuid())
  twitchId      String    @unique
  username      String
  displayName   String?
  email         String?   @unique
  avatar        String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // Отношения
  followers     Follow[]  @relation("UserFollowers")
  following     Follow[]  @relation("UserFollowing")
  reviews       Review[]
  receivedReviews Review[] @relation("ReceivedReviews")
  streamCoins   Int       @default(0)
  
  @@map("users")
}

// Модель подписок
model Follow {
  id            String    @id @default(uuid())
  followerId    String
  followingId   String
  createdAt     DateTime  @default(now())
  
  // Отношения
  follower      User      @relation("UserFollowers", fields: [followerId], references: [id], onDelete: Cascade)
  following     User      @relation("UserFollowing", fields: [followingId], references: [id], onDelete: Cascade)
  
  @@unique([followerId, followingId])
  @@map("follows")
}

// Модель отзывов
model Review {
  id            String    @id @default(uuid())
  content       String
  rating        Int
  authorId      String
  streamerId    String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  categories    String[]
  
  // Отношения
  author        User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  streamer      User      @relation("ReceivedReviews", fields: [streamerId], references: [id], onDelete: Cascade)
  
  @@map("reviews")
}

// Модель категорий отзывов
model ReviewCategory {
  id            String    @id @default(uuid())
  name          String    @unique
  description   String?
  createdAt     DateTime  @default(now())
  
  @@map("review_categories")
}

// Модель транзакций StreamCoins
model StreamCoinsTransaction {
  id            String    @id @default(uuid())
  userId        String
  amount        Int
  type          String    // "EARN", "SPEND"
  description   String
  createdAt     DateTime  @default(now())
  
  @@map("stream_coins_transactions")
} 