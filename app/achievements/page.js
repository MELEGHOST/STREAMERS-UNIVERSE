'use client';
import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import { useAuth } from '../contexts/AuthContext';
import styles from './achievements.module.css';
import pageStyles from '../../styles/page.module.css';

// –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
// const exampleAchievement = {
//   id: 'first_stream',
//   name: '–ü–µ—Ä–≤—ã–π —Å—Ç—Ä–∏–º',
//   description: '–ü—Ä–æ–≤–µ—Å—Ç–∏ –ø–µ—Ä–≤—É—é —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é.',
//   icon: 'üèÜ', // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ URL –∏–∫–æ–Ω–∫–∏
//   unlocked: true, // –∏–ª–∏ false
//   condition: '–ü—Ä–æ–≤–µ—Å—Ç–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é', // –û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª–æ–≤–∏—è
//   progress: null, // { current: 1, target: 1 } –∏–ª–∏ null
// };

const exampleAllAchievements = [
   { id: 'first_stream', name: '–ü–µ—Ä–≤—ã–π —Å—Ç—Ä–∏–º', description: '–ü—Ä–æ–≤–µ—Å—Ç–∏ –ø–µ—Ä–≤—É—é —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é.', icon: 'üöÄ', condition: '–ü—Ä–æ–≤–µ—Å—Ç–∏ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é' },
   { id: 'follower_goal_10', name: '10 –§–æ–ª–ª–æ–≤–µ—Ä–æ–≤', description: '–°–æ–±—Ä–∞—Ç—å 10 —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤ –Ω–∞ Twitch.', icon: 'üë•', condition: '10+ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤' },
   { id: 'watch_time_1h', name: '–ß–∞—Å –≤ —ç—Ñ–∏—Ä–µ', description: '–ù–∞–±—Ä–∞—Ç—å 1 —á–∞—Å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–∏—Ö —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–π.', icon: '‚è±Ô∏è', condition: '1 —á–∞—Å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞' },
   { id: 'first_review', name: '–ü–µ—Ä–≤—ã–π –æ—Ç–∑—ã–≤', description: '–ù–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –æ—Ç–∑—ã–≤.', icon: '‚úçÔ∏è', condition: '–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤' },
   { id: 'affiliate_status', name: '–ö–æ–º–ø–∞–Ω—å–æ–Ω Twitch', description: '–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–º–ø–∞–Ω—å–æ–Ω–∞ –Ω–∞ Twitch.', icon: 'ü§ù', condition: '–°—Ç–∞—Ç—É—Å –∫–æ–º–ø–∞–Ω—å–æ–Ω–∞' },
];

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
function AchievementCard({ achievement, isUnlocked }) {
    return (
        <div className={`${styles.achievementCard} ${isUnlocked ? styles.unlocked : styles.locked}`}>
            <div className={styles.achievementIcon}>{achievement.icon}</div>
            <div className={styles.achievementInfo}>
                <h3 className={styles.achievementName}>{achievement.name}</h3>
                <p className={styles.achievementDescription}>{achievement.description}</p>
                 {/* –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å */} 
                {!isUnlocked && achievement.condition && <p className={styles.achievementCondition}>–£—Å–ª–æ–≤–∏–µ: {achievement.condition}</p>}
            </div>
        </div>
    );
}


export default function AchievementsPage() {
  const { user, isLoading, isAuthenticated, supabase } = useAuth();
  const router = useRouter();
  const [activeTab, setActiveTab] = useState('my'); // 'my' –∏–ª–∏ 'all'
  const [myAchievements, setMyAchievements] = useState([]);
  const [allAchievements] = useState(exampleAllAchievements); 
  const [loadingAch, setLoadingAch] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    if (!isLoading && !isAuthenticated) {
      router.push('/auth?next=/achievements');
    } else if (isAuthenticated && user && supabase) {
       // TODO: –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å API
       setLoadingAch(true);
       setError(null);
       // –ó–¥–µ—Å—å –±—É–¥–µ—Ç fetch –∫ /api/achievements
       // fetch('/api/achievements?userId=' + user.id).then(...).catch(...)
       // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫–∏:
       setTimeout(() => { // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
            // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫—Ä—ã–ª —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
            const unlockedIds = ['first_stream']; 
            const userAch = allAchievements.filter(ach => unlockedIds.includes(ach.id));
            setMyAchievements(userAch);
            setLoadingAch(false);
       }, 500);
    }
  }, [isLoading, isAuthenticated, user, supabase, router, allAchievements]);

   if (isLoading) {
       return (
           <div className={pageStyles.loadingContainer}>
               <div className="spinner"></div><p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
           </div>
       );
   }
   if (!isAuthenticated) { return null; }

  return (
    <div className={pageStyles.container}>
      <h1 className={styles.title}>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h1>

      <div className={styles.tabs}>
        <button 
          className={`${styles.tabButton} ${activeTab === 'my' ? styles.activeTab : ''}`}
          onClick={() => setActiveTab('my')}
        >
          –ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        </button>
        <button 
          className={`${styles.tabButton} ${activeTab === 'all' ? styles.activeTab : ''}`}
          onClick={() => setActiveTab('all')}
        >
          –í—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        </button>
      </div>

      {error && <div className={pageStyles.errorMessage} style={{ marginBottom: '1rem' }}>{error}</div>}
      
      {loadingAch ? (
            <div className={pageStyles.loadingContainer}>
                <div className="spinner"></div><p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...</p>
            </div>
       ) : (
          <div className={styles.achievementsList}>
             {activeTab === 'my' && (
                 myAchievements.length === 0 
                     ? <p className={styles.noAchievements}>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.</p>
                     : myAchievements.map(ach => <AchievementCard key={ach.id} achievement={ach} isUnlocked={true} />)
             )}
             {activeTab === 'all' && (
                 allAchievements.map(ach => {
                     const isUnlocked = myAchievements.some(myAch => myAch.id === ach.id);
                     return <AchievementCard key={ach.id} achievement={ach} isUnlocked={isUnlocked} />;
                 })
             )}
          </div>
       )}

       <button onClick={() => router.back()} className={pageStyles.backButton} style={{ marginTop: '2rem' }}>
           &larr; –ù–∞–∑–∞–¥
       </button>
    </div>
  );
} 