'use client';

import React, { useEffect, useState /*, useCallback */ } from 'react';
import { useRouter } from 'next/navigation';
import styles from './reviews.module.css';
import ReviewCategories, { categories } from '../components/ReviewCategories';
// import Link from 'next/link'; // –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –∏–º–ø–æ—Ä—Ç
import { useAuth } from '../../contexts/AuthContext';
import { createBrowserClient } from '@supabase/ssr';
import { useMemo } from 'react';

export default function Reviews() {
  const { /* –£–¥–∞–ª—è–µ–º userId */ /* –£–¥–∞–ª—è–µ–º isAuthenticated */ } = useAuth();
  const [isLoading, setIsLoading] = useState(true);
  const [showModal, setShowModal] = useState(false);
  const [selectedCategory, setSelectedCategory] = useState(null);
  const [selectedSubcategory, setSelectedSubcategory] = useState(null);
  const [rating, setRating] = useState(0);
  const [hoverRating, setHoverRating] = useState(0);
  const [productName, setProductName] = useState('');
  const [reviewText, setReviewText] = useState('');
  const [submitting, setSubmitting] = useState(false);
  const [submitError, setSubmitError] = useState('');
  const [formErrors, setFormErrors] = useState({});
  const router = useRouter();

  // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
  const supabase = useMemo(() => 
    createBrowserClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL,
      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
    ), 
  []);

  useEffect(() => {
    const checkAuth = async () => {
      try {
        setIsLoading(true);
        // –ó–∞–º–µ–Ω—è–µ–º DataStorage –Ω–∞ Supabase
        const { data: { session } } = await supabase.auth.getSession();
        
        if (!session) {
          console.log('ReviewsPage: –°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /auth');
          router.push('/auth?reason=unauthenticated');
        } else {
          console.log('ReviewsPage: –°–µ—Å—Å–∏—è –Ω–∞–π–¥–µ–Ω–∞');
          setIsLoading(false);
        }
      } catch (error) {
        console.error('ReviewsPage: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Å—Å–∏–∏ Supabase:', error);
        // –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—à–∏–±–∫–∏ –∏–ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        router.push('/auth?reason=session_error'); 
      } 
      // finally –Ω–µ –Ω—É–∂–µ–Ω, setLoading(false) –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ else
    };
    
    checkAuth();
  }, [router, supabase]); // –î–æ–±–∞–≤–ª—è–µ–º supabase

  const handleReturnToMenu = () => {
    router.push('/menu');
  };

  const openWriteReviewModal = (categoryData = null) => {
    setShowModal(true);
    
    // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
    if (categoryData && categoryData.category) {
      setSelectedCategory(categoryData.category);
      
      if (categoryData.subcategory) {
        setSelectedSubcategory(categoryData.subcategory);
      }
    }
  };

  const closeModal = () => {
    setShowModal(false);
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    setSelectedCategory(null);
    setSelectedSubcategory(null);
    setRating(0);
    setHoverRating(0);
    setProductName('');
    setReviewText('');
    setSubmitError('');
    setFormErrors({});
  };

  const handleRatingClick = (starIndex) => {
    setRating(starIndex);
  };

  const handleMouseEnter = (starIndex) => {
    setHoverRating(starIndex);
  };

  const handleMouseLeave = () => {
    setHoverRating(0);
  };

  const validateForm = () => {
    const errors = {};
    if (!selectedCategory) {
      errors.category = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é';
    }
    
    if (!productName.trim()) {
      errors.productName = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–ª–∏ —É—Å–ª—É–≥–∏';
    }
    
    if (rating === 0) {
      errors.rating = '–ü–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ü–µ–Ω–∫—É (–æ—Ç 1 –¥–æ 5 –∑–≤–µ–∑–¥)';
    }
    
    if (!reviewText.trim() || reviewText.length < 10) {
      errors.reviewText = '–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ (–º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤)';
    }
    
    setFormErrors(errors);
    return Object.keys(errors).length === 0;
  };

  const submitReview = async () => {
    setSubmitError('');
    setFormErrors({});
    
    if (!validateForm()) {
      return;
    }
    
    setSubmitting(true);
    
    try {
      // 1. –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–µ—Å—Å–∏–∏ Supabase
      const { data: { session }, error: sessionError } = await supabase.auth.getSession();
      if (sessionError || !session) {
        setSubmitError('–°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ.');
        setSubmitting(false);
        return;
      }
      const authorId = session.user.id;
      if (!authorId) { // –î–æ–ø. –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
         setSubmitError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–µ—Å—Å–∏–∏.');
         setSubmitting(false);
         return;
      }

      // 2. –ì–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      const reviewData = {
        targetName: productName, 
        rating,
        content: reviewText, 
        targetType: selectedCategory?.name || '–†–∞–∑–Ω–æ–µ', // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ü–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
      };
      
      // 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const response = await fetch('/api/reviews', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          // Cookie –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ App Router
        },
        body: JSON.stringify(reviewData),
      });
      
      const data = await response.json();
      
      if (!response.ok) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–∞:', response.status, data);
        setSubmitError(data.error || `–û—à–∏–±–∫–∞ ${response.status}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.`);
        setSubmitting(false);
        return;
      }
      
      alert('–í–∞—à –æ—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!');
      closeModal();
      
    } catch (error) {
      console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–∞:', error);
      setSubmitError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setSubmitting(false);
    }
  };

  if (isLoading) {
    return (
      <div className={styles.loadingContainer}>
        <div className={styles.loader}></div>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      </div>
    );
  }

  return (
    <div className={styles.container}>
      <div className={styles.header}>
        <button onClick={handleReturnToMenu} className={styles.returnButton}>
          <span className={styles.returnIcon}>‚Üê</span>
          –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é
        </button>
        <h1 className={styles.title}>–û—Ç–∑—ã–≤—ã –æ–±–æ –≤—Å—ë–º</h1>
      </div>
      
      <p className={styles.description}>
        –ó–¥–µ—Å—å —Å–æ–±—Ä–∞–Ω—ã –æ—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–æ –≤—Å—ë–º, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —ç—Ç–æ–º –º–∏—Ä–µ: 
        –æ—Ç —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –≥–∞–¥–∂–µ—Ç–æ–≤ –¥–æ –æ–Ω–ª–∞–π–Ω-—Å–µ—Ä–≤–∏—Å–æ–≤, –∏–≥—Ä, –º–µ–±–µ–ª–∏ –∏ –º–Ω–æ–≥–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ.
        –õ—é–±–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –æ—Ç–∑—ã–≤. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π.
      </p>
      
      <button onClick={openWriteReviewModal} className={styles.writeReviewButton}>
        <span className={styles.buttonIcon}>‚úèÔ∏è</span>
        –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤
      </button>
      
      <ReviewCategories onWriteReview={openWriteReviewModal} />
      
      <div className={styles.infoSection}>
        <h2 className={styles.infoTitle}>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</h2>
        <div className={styles.infoBlocks}>
          <div className={styles.infoBlock}>
            <div className={styles.infoIcon}>üìù</div>
            <h3>–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –æ—Ç–∑—ã–≤—ã</h3>
            <p>–í—Å–µ –æ—Ç–∑—ã–≤—ã –æ—Å—Ç–∞–≤–ª–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –æ—Ö–≤–∞—Ç—ã–≤–∞—é—Ç –ª—é–±—ã–µ —Ç–æ–≤–∞—Ä—ã, —Å–µ—Ä–≤–∏—Å—ã –∏ –ø—Ä–æ–¥—É–∫—Ç—ã.</p>
          </div>
          <div className={styles.infoBlock}>
            <div className={styles.infoIcon}>üîé</div>
            <h3>–ß–µ—Å—Ç–Ω—ã–µ –º–Ω–µ–Ω–∏—è</h3>
            <p>–ú—ã –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –æ—Ç–∑—ã–≤—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ, —Ç–∞–∫ –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã.</p>
          </div>
          <div className={styles.infoBlock}>
            <div className={styles.infoIcon}>üèÜ</div>
            <h3>–õ–∏—á–Ω—ã–π —Ç–∏—Ä-–ª–∏—Å—Ç</h3>
            <p>–ü–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ 5 –∏–ª–∏ –±–æ–ª–µ–µ –æ—Ç–∑—ã–≤–æ–≤ –≤ –æ–¥–Ω–æ–π –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –≤–∞—à –ª–∏—á–Ω—ã–π —Ç–∏—Ä-–ª–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –¥–µ–ª–∏—Ç—å—Å—è –∏–º.</p>
          </div>
          <div className={styles.infoBlock}>
            <div className={styles.infoIcon}>üåç</div>
            <h3>–í—Å—ë —á—Ç–æ —É–≥–æ–¥–Ω–æ</h3>
            <p>–û—Ç —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –∏–≥—Ä –¥–æ –º–µ–±–µ–ª–∏ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤ - –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∏–ª–∏ –Ω–∞–π—Ç–∏ –æ—Ç–∑—ã–≤ –æ —á—ë–º —É–≥–æ–¥–Ω–æ!</p>
          </div>
        </div>
      </div>
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞ */}
      {showModal && (
        <div className={styles.modalOverlay}>
          <div className={styles.writeReviewModal}>
            <div className={styles.modalHeader}>
              <h2>–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤</h2>
              <button onClick={closeModal} className={styles.closeButton}>√ó</button>
            </div>
            <div className={styles.modalContent}>
              {submitError && (
                <div className={`${styles.errorMessage} ${styles.generalErrorMessage}`}>
                  {submitError}
                </div>
              )}
              
              <div className={styles.formGroup}>
                <label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                <select 
                  className={`${styles.selectField} ${formErrors.category ? styles.errorInput : ''}`}
                  value={selectedCategory ? selectedCategory.id : ""}
                  onChange={(e) => {
                    const cat = categories.find(c => c.id === e.target.value);
                    setSelectedCategory(cat);
                    setSelectedSubcategory(null);
                    setFormErrors(prev => ({...prev, category: '', subcategory: ''}));
                  }}
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                  {categories.map(cat => (
                    <option key={cat.id} value={cat.id}>{cat.name}</option>
                  ))}
                </select>
                {formErrors.category && <span className={styles.fieldError}>{formErrors.category}</span>}
              </div>
              
              {selectedCategory && (
                <div className={styles.formGroup}>
                  <label>–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                  <select 
                    className={`${styles.selectField} ${formErrors.subcategory ? styles.errorInput : ''}`}
                    value={selectedSubcategory ? selectedSubcategory.id : ""}
                    onChange={(e) => {
                      const subcat = selectedCategory.subcategories.find(sc => sc.id === e.target.value);
                      setSelectedSubcategory(subcat);
                      setFormErrors(prev => ({...prev, subcategory: ''}));
                    }}
                    disabled={!selectedCategory}
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                    {selectedCategory.subcategories.map(subcat => (
                      <option key={subcat.id} value={subcat.id}>{subcat.name}</option>
                    ))}
                  </select>
                  {formErrors.subcategory && <span className={styles.fieldError}>{formErrors.subcategory}</span>}
                </div>
              )}
              
              <div className={styles.formGroup}>
                <label>–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–ª–∏ —É—Å–ª—É–≥–∏</label>
                <input 
                  type="text" 
                  className={`${styles.inputField} ${formErrors.productName ? styles.errorInput : ''}`} 
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Logitech G Pro X" 
                  value={productName}
                  onChange={(e) => {
                    setProductName(e.target.value);
                    setFormErrors(prev => ({...prev, productName: ''}));
                  }}
                />
                {formErrors.productName && <span className={styles.fieldError}>{formErrors.productName}</span>}
              </div>
              <div className={styles.formGroup}>
                <label>–û—Ü–µ–Ω–∫–∞</label>
                <div className={`${styles.ratingSelector} ${formErrors.rating ? styles.errorRating : ''}`}>
                  {[1, 2, 3, 4, 5].map(star => (
                    <span 
                      key={star} 
                      className={`${styles.ratingStar} ${(hoverRating || rating) >= star ? styles.active : ''}`}
                      onClick={() => {
                        handleRatingClick(star);
                        setFormErrors(prev => ({...prev, rating: ''}));
                      }}
                      onMouseEnter={() => handleMouseEnter(star)}
                      onMouseLeave={handleMouseLeave}
                    >
                      ‚òÖ
                    </span>
                  ))}
                </div>
                {formErrors.rating && <span className={styles.fieldError}>{formErrors.rating}</span>}
              </div>
              <div className={styles.formGroup}>
                <label>–û—Ç–∑—ã–≤</label>
                <textarea 
                  className={`${styles.textareaField} ${formErrors.reviewText ? styles.errorInput : ''}`} 
                  placeholder="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è..."
                  rows="5"
                  value={reviewText}
                  onChange={(e) => {
                    setReviewText(e.target.value);
                    setFormErrors(prev => ({...prev, reviewText: ''}));
                  }}
                ></textarea>
                {formErrors.reviewText && <span className={styles.fieldError}>{formErrors.reviewText}</span>}
              </div>
              <div className={styles.formActions}>
                <button 
                  className={styles.cancelButton} 
                  onClick={closeModal}
                  disabled={submitting}
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
                <button 
                  className={styles.submitButton}
                  onClick={submitReview}
                  disabled={submitting}
                >
                  {submitting ? '–ü—É–±–ª–∏–∫–∞—Ü–∏—è...' : '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'}
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
} 