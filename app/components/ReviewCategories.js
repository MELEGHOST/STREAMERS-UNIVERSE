'use client';

import React, { useState } from 'react';
import styles from './ReviewCategories.module.css';

const categories = [
  { id: 'all', name: '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', icon: 'üîç' },
  { id: 'tech', name: '–¢–µ—Ö–Ω–∏–∫–∞', icon: 'üíª' },
  { id: 'gaming', name: '–ò–≥—Ä—ã', icon: 'üéÆ' },
  { id: 'peripherals', name: '–ü–µ—Ä–∏—Ñ–µ—Ä–∏—è', icon: 'üéß' },
  { id: 'furniture', name: '–ú–µ–±–µ–ª—å', icon: 'ü™ë' },
  { id: 'lighting', name: '–û—Å–≤–µ—â–µ–Ω–∏–µ', icon: 'üí°' },
  { id: 'software', name: '–ü—Ä–æ–≥—Ä–∞–º–º—ã', icon: 'üìä' },
  { id: 'accessories', name: '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã', icon: 'üì±' },
  { id: 'food', name: '–ï–¥–∞ –∏ –Ω–∞–ø–∏—Ç–∫–∏', icon: 'üçï' },
  { id: 'clothing', name: '–û–¥–µ–∂–¥–∞', icon: 'üëï' },
  { id: 'services', name: '–°–µ—Ä–≤–∏—Å—ã', icon: 'üîß' },
  { id: 'other', name: '–ü—Ä–æ—á–µ–µ', icon: 'üì¶' }
];

const ReviewCategories = ({ onCategorySelect = () => {} }) => {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [isExpanded, setIsExpanded] = useState(false);

  const handleCategoryClick = (categoryId) => {
    setSelectedCategory(categoryId);
    onCategorySelect(categoryId);
    
    // –ï—Å–ª–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ, —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
    if (window.innerWidth <= 768) {
      setIsExpanded(false);
    }
  };

  const toggleExpand = () => {
    setIsExpanded(!isExpanded);
  };

  // –ù–∞—Ö–æ–¥–∏–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
  const selectedCategoryObj = categories.find(cat => cat.id === selectedCategory);

  return (
    <div className={styles.categoriesContainer}>
      <div className={styles.categoriesHeader} onClick={toggleExpand}>
        <div className={styles.selectedCategory}>
          <span className={styles.categoryIcon}>{selectedCategoryObj?.icon}</span>
          <span className={styles.categoryName}>{selectedCategoryObj?.name}</span>
        </div>
        <span className={`${styles.expandIcon} ${isExpanded ? styles.expanded : ''}`}>
          ‚ñº
        </span>
      </div>
      
      {isExpanded && (
        <div className={styles.categoriesList}>
          {categories.map(category => (
            <div 
              key={category.id}
              className={`${styles.categoryItem} ${selectedCategory === category.id ? styles.active : ''}`}
              onClick={() => handleCategoryClick(category.id)}
            >
              <span className={styles.categoryIcon}>{category.icon}</span>
              <span className={styles.categoryName}>{category.name}</span>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default ReviewCategories; 