'use client';

import React, { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import styles from './edit-profile.module.css';
import Cookies from 'js-cookie';
import NeonCheckbox from '../components/NeonCheckbox';
import { DataStorage } from '../utils/dataStorage';

export default function EditProfile() {
  const [userData, setUserData] = useState(null);
  const [socialLinks, setSocialLinks] = useState({
    description: '',
    twitch: '',
    youtube: '',
    discord: '',
    telegram: '',
    vk: '',
    yandexMusic: '',
    isMusician: false
  });
  const [birthday, setBirthday] = useState('');
  const [showBirthday, setShowBirthday] = useState(true);
  const [statsVisibility, setStatsVisibility] = useState({
    followers: true,
    followings: true,
    streams: true,
    channel: true,
    accountInfo: true
  });
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const router = useRouter();
  const [submitting, setSubmitting] = useState(false);
  const [saveSuccess, setSaveSuccess] = useState(false);
  const [saveError, setSaveError] = useState(false);

  useEffect(() => {
    const loadUserData = async () => {
      try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ DataStorage
        const userData = await DataStorage.getData('user');
        
        if (!userData || !userData.id) {
          router.push('/login');
          return;
        }
        
        setUserData(userData);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        const userBirthday = localStorage.getItem(`birthday_${userData.id}`);
        if (userBirthday) {
          setBirthday(userBirthday);
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –≤–∏–¥–∏–º–æ—Å—Ç–∏ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è
        const birthdayVisibility = localStorage.getItem(`birthday_visibility_${userData.id}`);
        if (birthdayVisibility !== null) {
          setShowBirthday(birthdayVisibility === 'true');
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        const savedStatsVisibility = localStorage.getItem(`stats_visibility_${userData.id}`);
        if (savedStatsVisibility) {
          setStatsVisibility(JSON.parse(savedStatsVisibility));
        }
        
        await fetchSocialLinks(userData.id);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      } finally {
        setLoading(false);
      }
    };
    
    loadUserData();
  }, []);

  const fetchSocialLinks = async (userId) => {
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
      const savedLinks = localStorage.getItem(`social_links_${userId}`);
      
      if (savedLinks) {
        setSocialLinks(JSON.parse(savedLinks));
        return;
      }
      
      // –ï—Å–ª–∏ –≤ localStorage –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–∞
      const response = await fetch('/api/user-socials');
      
      if (response.ok) {
        const data = await response.json();
        setSocialLinks(data);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫:', error);
    }
  };

  const handleSocialLinksChange = (e) => {
    const { name, value, type, checked } = e.target;
    setSocialLinks(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }));
  };

  const handleBirthdayChange = (e) => {
    setBirthday(e.target.value);
  };

  const handleShowBirthdayChange = (e) => {
    setShowBirthday(e.target.checked);
  };

  const handleStatsVisibilityChange = (e) => {
    const { name, checked } = e.target;
    setStatsVisibility(prev => ({
      ...prev,
      [name]: checked
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setSubmitting(true);
    setSaveSuccess(false);
    setSaveError(false);
    
    try {
      if (userData && userData.id) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –≤ localStorage
        localStorage.setItem(`social_links_${userData.id}`, JSON.stringify(socialLinks));
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤ localStorage
        if (birthday) {
          localStorage.setItem(`birthday_${userData.id}`, birthday);
        } else {
          localStorage.removeItem(`birthday_${userData.id}`);
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –≤–∏–¥–∏–º–æ—Å—Ç–∏ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è
        localStorage.setItem(`birthday_visibility_${userData.id}`, showBirthday.toString());
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        localStorage.setItem(`stats_visibility_${userData.id}`, JSON.stringify(statsVisibility));
        
        // –ü—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        try {
          const response = await fetch('/api/user-socials', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(socialLinks)
          });
          
          if (!response.ok) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –Ω–æ –æ–Ω–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ');
          }
        } catch (serverError) {
          console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', serverError);
        }
        
        setSaveSuccess(true);
        
        // –û–∂–∏–¥–∞–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
        setTimeout(() => {
          // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage –∏ DataStorage –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
          if (userData) {
            // –ï—Å–ª–∏ –µ—Å—Ç—å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –µ–≥–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∫–∏
            if (userData.profile_image_url) {
              const updatedUserData = { ...userData };
              localStorage.setItem('twitch_user', JSON.stringify(updatedUserData));
              DataStorage.saveData('user', updatedUserData);
            }
          }
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –æ–±—Ö–æ–¥–∞ –∫—ç—à–∞
          router.push('/profile?refresh=' + Date.now());
        }, 1500);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      setSaveError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <div className={styles.editProfileContainer}>
      <h1 className={styles.editProfileTitle}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è</h1>
      
      {loading ? (
        <div className={styles.loading}>
          <div className={styles.spinner}></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
        </div>
      ) : error ? (
        <div className={styles.error}>
          <p>{error}</p>
          <button className={styles.button} onClick={() => router.push('/menu')}>
            –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é
          </button>
        </div>
      ) : (
        <form className={styles.editForm} onSubmit={handleSubmit}>
          {/* –°–µ–∫—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è */}
          <div className={styles.formSection}>
            <h2>–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è</h2>
            <div className={styles.inputGroup}>
              <label htmlFor="description">–û —Å–µ–±–µ:</label>
              <textarea
                id="description"
                name="description"
                className={styles.textarea}
                value={socialLinks.description}
                onChange={handleSocialLinksChange}
                placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ..."
                maxLength={500}
              />
              <div className={styles.charCount}>
                {socialLinks.description.length}/500
              </div>
            </div>
          </div>
          
          {/* –°–µ–∫—Ü–∏—è –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è */}
          <div className={styles.formSection}>
            <h2>–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è</h2>
            <div className={styles.inputGroup}>
              <label htmlFor="birthday">–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</label>
              <input
                type="date"
                id="birthday"
                name="birthday"
                className={styles.input}
                value={birthday}
                onChange={handleBirthdayChange}
              />
              <p className={styles.birthdayNote}>
                –í –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 100 —Å—Ç—Ä–∏–º–µ—Ä-–∫–æ–∏–Ω–æ–≤ –≤ –ø–æ–¥–∞—Ä–æ–∫! üéÅ
              </p>
            </div>
            <div className={styles.checkboxGroup}>
              <NeonCheckbox
                label="–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"
                checked={showBirthday}
                onChange={handleShowBirthdayChange}
                name="showBirthday"
              />
            </div>
          </div>
          
          {/* –°–µ–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
          <div className={styles.formSection}>
            <h2>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</h2>
            <p className={styles.sectionDescription}>
              –í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –≤ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ:
            </p>
            
            <div className={styles.checkboxGrid}>
              <div className={styles.checkboxGroup}>
                <NeonCheckbox
                  label="–ü–æ–¥–ø–∏—Å—á–∏–∫–∏"
                  checked={statsVisibility.followers}
                  onChange={handleStatsVisibilityChange}
                  name="followers"
                />
              </div>
              
              <div className={styles.checkboxGroup}>
                <NeonCheckbox
                  label="–ü–æ–¥–ø–∏—Å–∫–∏"
                  checked={statsVisibility.followings}
                  onChange={handleStatsVisibilityChange}
                  name="followings"
                />
              </div>
              
              <div className={styles.checkboxGroup}>
                <NeonCheckbox
                  label="–°—Ç—Ä–∏–º—ã"
                  checked={statsVisibility.streams}
                  onChange={handleStatsVisibilityChange}
                  name="streams"
                />
              </div>
              
              <div className={styles.checkboxGroup}>
                <NeonCheckbox
                  label="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ"
                  checked={statsVisibility.channel}
                  onChange={handleStatsVisibilityChange}
                  name="channel"
                />
              </div>
              
              <div className={styles.checkboxGroup}>
                <NeonCheckbox
                  label="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ"
                  checked={statsVisibility.accountInfo}
                  onChange={handleStatsVisibilityChange}
                  name="accountInfo"
                />
              </div>
            </div>
          </div>
          
          {/* –°–µ–∫—Ü–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π */}
          <div className={styles.formSection}>
            <h2>–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</h2>
            
            <div className={styles.inputGroup}>
              <label htmlFor="twitch">Twitch:</label>
              <div className={styles.inputWithIcon}>
                <span className={styles.inputIcon}>üü£</span>
                <input
                  type="text"
                  id="twitch"
                  name="twitch"
                  className={styles.input}
                  value={socialLinks.twitch}
                  onChange={handleSocialLinksChange}
                  placeholder="https://twitch.tv/username"
                />
              </div>
            </div>
            
            <div className={styles.inputGroup}>
              <label htmlFor="youtube">YouTube:</label>
              <div className={styles.inputWithIcon}>
                <span className={styles.inputIcon}>üî¥</span>
                <input
                  type="text"
                  id="youtube"
                  name="youtube"
                  className={styles.input}
                  value={socialLinks.youtube}
                  onChange={handleSocialLinksChange}
                  placeholder="https://youtube.com/c/username"
                />
              </div>
            </div>
            
            <div className={styles.inputGroup}>
              <label htmlFor="discord">Discord:</label>
              <div className={styles.inputWithIcon}>
                <span className={styles.inputIcon}>üîµ</span>
                <input
                  type="text"
                  id="discord"
                  name="discord"
                  className={styles.input}
                  value={socialLinks.discord}
                  onChange={handleSocialLinksChange}
                  placeholder="https://discord.gg/invite"
                />
              </div>
            </div>
            
            <div className={styles.inputGroup}>
              <label htmlFor="telegram">Telegram:</label>
              <div className={styles.inputWithIcon}>
                <span className={styles.inputIcon}>üì±</span>
                <input
                  type="text"
                  id="telegram"
                  name="telegram"
                  className={styles.input}
                  value={socialLinks.telegram}
                  onChange={handleSocialLinksChange}
                  placeholder="https://t.me/username"
                />
              </div>
            </div>
            
            <div className={styles.inputGroup}>
              <label htmlFor="vk">–í–ö–æ–Ω—Ç–∞–∫—Ç–µ:</label>
              <div className={styles.inputWithIcon}>
                <span className={styles.inputIcon}>üíô</span>
                <input
                  type="text"
                  id="vk"
                  name="vk"
                  className={styles.input}
                  value={socialLinks.vk}
                  onChange={handleSocialLinksChange}
                  placeholder="https://vk.com/username"
                />
              </div>
            </div>
            
            <div className={styles.checkboxGroup}>
              <NeonCheckbox
                label="–Ø –º—É–∑—ã–∫–∞–Ω—Ç"
                checked={socialLinks.isMusician}
                onChange={(e) => handleSocialLinksChange({ target: { name: 'isMusician', checked: e.target.checked } })}
                name="isMusician"
              />
            </div>
            
            {socialLinks.isMusician && (
              <div className={styles.inputGroup}>
                <label htmlFor="yandexMusic">–Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∞:</label>
                <div className={styles.inputWithIcon}>
                  <span className={styles.inputIcon}>üéµ</span>
                  <input
                    type="text"
                    id="yandexMusic"
                    name="yandexMusic"
                    className={styles.input}
                    value={socialLinks.yandexMusic}
                    onChange={handleSocialLinksChange}
                    placeholder="https://music.yandex.ru/artist/..."
                  />
                </div>
              </div>
            )}
          </div>
          
          <div className={styles.buttonGroup}>
            <button
              type="submit"
              className={styles.button}
              disabled={submitting}
            >
              {submitting ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å'}
            </button>
            <button
              type="button"
              className={styles.button}
              onClick={() => router.push('/profile')}
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª—å
            </button>
          </div>
          
          {saveSuccess && (
            <div className={styles.successMessage}>
              –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!
            </div>
          )}
          
          {saveError && (
            <div className={styles.errorMessage}>
              {saveError}
            </div>
          )}
        </form>
      )}
    </div>
  );
} 