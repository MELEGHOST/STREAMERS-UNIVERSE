'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import Link from 'next/link';
import Image from 'next/image';
import { useAuth } from '../contexts/AuthContext';
import styles from './menu.module.css';

export default function MenuPage() {
  const router = useRouter();
  const { user, isLoading, isAuthenticated, supabase } = useAuth();

  useEffect(() => {
    if (!isLoading && !isAuthenticated) {
      console.log('[MenuPage] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é');
      router.replace('/?next=/menu');
    }
  }, [isLoading, isAuthenticated, router]);

  const handleLogout = async () => {
    if (!supabase) return;
    try {
      const { error: signOutError } = await supabase.auth.signOut();
      if (signOutError) {
        console.error('[MenuPage] –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', signOutError);
      } else {
        console.log('[MenuPage] –í—ã—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω. –†–µ–¥–∏—Ä–µ–∫—Ç –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω AuthContext.');
      }
    } catch (criticalError) {
      console.error('[MenuPage] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', criticalError);
    }
  };

  const userTwitchId = user?.user_metadata?.provider_id;
  const userRole = user?.profile?.role;

  if (isLoading) {
    return <div className={styles.loadingContainer}><div className="spinner"></div></div>;
  }

  if (!isAuthenticated && !isLoading) {
     return <div className={styles.loadingContainer}><p>–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...</p></div>;
  }

  return (
    <div className={styles.container}>
      <header className={styles.header}>
        <Link href="/" passHref>
          <Image src="/logo.png" alt="Streamers Universe Logo" width={50} height={50} priority />
        </Link>
        
        <nav className={styles.userNav}>
           {userTwitchId && (
             <Link href={`/profile/${userTwitchId}`} className={styles.userLink} title="–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å">
                <Image 
                   src={user?.user_metadata?.avatar_url || '/images/default_avatar.png'} 
                   alt="–í–∞—à –∞–≤–∞—Ç–∞—Ä"
                   width={40} 
                   height={40} 
                   className={styles.userAvatar}
                />
                <span className={styles.userName}>{user?.user_metadata?.full_name || '–ü—Ä–æ—Ñ–∏–ª—å'}</span>
             </Link>
            )}
            <button onClick={handleLogout} className={styles.logoutButton} title="–í—ã–π—Ç–∏">üö™</button> 
         </nav>
      </header>

      <main className={styles.mainContent}>
        <h2 className={styles.mainTitle}>–ú–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏</h2>
        <nav className={styles.mainNav}>
           <Link href="/search" className={styles.navButton}>
            <span className={styles.icon}>üîç</span> –ü–æ–∏—Å–∫
          </Link>
          <Link href="/leaderboards" className={styles.navButton}>
            <span className={styles.icon}>üèÜ</span> –¢–æ–ø—ã –°—Ç—Ä–∏–º–µ—Ä–æ–≤
          </Link>
          <Link href="/streams" className={styles.navButton}>
            <span className={styles.icon}>üî¥</span> –¢–µ–∫—É—â–∏–µ –°—Ç—Ä–∏–º—ã
          </Link>
          <Link href="/reviews" className={styles.navButton}>
              <span className={styles.icon}>üí¨</span> –û—Ç–∑—ã–≤—ã
          </Link>
          {isAuthenticated && (
             <Link href="/achievements" className={styles.navButton}>
               <span className={styles.icon}>üèÖ</span> –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
             </Link>
           )}
           {userRole === 'admin' && (
               <Link href="/admin/reviews" className={`${styles.navButton} ${styles.adminButton}`}> 
                  <span className={styles.icon}>üõ°Ô∏è</span> –ú–æ–¥–µ—Ä–∞—Ü–∏—è
               </Link>
           )}
        </nav>
      </main>

      <footer className={styles.footer}>
        <p>&copy; {new Date().getFullYear()} Streamers Universe. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã?</p>
      </footer>
    </div>
  );
} 