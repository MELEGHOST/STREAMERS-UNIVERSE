'use client';

import React, { useState, useEffect, useCallback } from 'react';
import { useRouter } from 'next/navigation';
import Image from 'next/image';
import styles from '../../styles/menu.module.css';
import MenuHeader from '../components/MenuHeader';
import Cookies from 'js-cookie';

export default function Menu() {
  const router = useRouter();
  const [userData, setUserData] = useState(null);  
  const [streamCoins, setStreamCoins] = useState(100);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    const loadUserData = async () => {
      try {
        setIsLoading(true);
        
        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
        const storedUser = localStorage.getItem('twitch_user');
        const isAuthenticated = localStorage.getItem('is_authenticated') === 'true';
        
        if (storedUser && isAuthenticated) {
          try {
            const userData = JSON.parse(storedUser);
            if (userData && userData.id) {
              console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ localStorage:', userData.login);
              setUserData(userData);
              loadStreamCoins(userData.id);
              setIsLoading(false);
              return;
            }
          } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage:', e);
          }
        }
        
        // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –≤ localStorage, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ API
        try {
          const response = await fetch('/api/twitch/user', {
            credentials: 'include',
            headers: {
              'Cache-Control': 'no-cache',
              'Pragma': 'no-cache'
            }
          });
          
          if (response.ok) {
            const data = await response.json();
            if (data && data.id) {
              console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ API:', data.login);
              setUserData(data);
              localStorage.setItem('twitch_user', JSON.stringify(data));
              localStorage.setItem('is_authenticated', 'true');
              loadStreamCoins(data.id);
            } else {
              // –ï—Å–ª–∏ API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
              console.error('API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
              router.push('/auth');
              return;
            }
          } else {
            // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ API:', response.status);
            router.push('/auth');
            return;
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
          router.push('/auth');
          return;
        }
      } catch (error) {
        console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      } finally {
        setIsLoading(false);
      }
    };
    
    loadUserData();
  }, [router]);
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∏–º–µ—Ä-–∫–æ–∏–Ω–æ–≤
  const loadStreamCoins = useCallback((userId) => {
    try {
      if (!userId) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∏–º–µ—Ä-–∫–æ–∏–Ω–æ–≤: userId –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω');
        setStreamCoins(100);
        return;
      }
      
      // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
      const safeGetFromStorage = (key) => {
        if (typeof window !== 'undefined' && window.localStorage) {
          return localStorage.getItem(key);
        }
        return null;
      };
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–∏–Ω–∞—Ö, —Ç–∞–∫ –∏ —Å—Ç–∞—Ä—ã–π
      const coinsDataKey = `data_streamcoins_${userId}`;
      const oldCoinsKey = `streamcoins_${userId}`;
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
      const storedCoinsData = safeGetFromStorage(coinsDataKey);
      if (storedCoinsData) {
        try {
          const parsedData = JSON.parse(storedCoinsData);
          if (parsedData && typeof parsedData.balance === 'number') {
            setStreamCoins(parsedData.balance);
            return;
          }
        } catch (e) {
          console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–∏–Ω–∞—Ö –∏–∑ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞:', e);
        }
      }
      
      // –ï—Å–ª–∏ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—ã–π
      const storedCoins = safeGetFromStorage(oldCoinsKey);
      if (storedCoins && !isNaN(parseInt(storedCoins, 10))) {
        setStreamCoins(parseInt(storedCoins, 10));
      } else {
        // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        setStreamCoins(100);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∏–º–µ—Ä-–∫–æ–∏–Ω–æ–≤:', error);
      setStreamCoins(100);
    }
  }, []);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Ñ–∏–ª—è
  const goToProfilePage = () => {
    router.push('/profile');
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–∏–Ω–æ–≤
  const goToCoinsPage = (e) => {
    e.preventDefault();
    e.stopPropagation();
    router.push('/coins');
  };
  
  // –ï—Å–ª–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞–≥—Ä—É–∑–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
  if (isLoading) {
    return (
      <div className={styles.loadingContainer}>
        <div className={styles.spinner}></div>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–Ω—é...</p>
      </div>
    );
  }
  
  // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (error) {
    return (
      <div className={styles.errorContainer}>
        <p className={styles.errorMessage}>{error}</p>
        <button className={styles.retryButton} onClick={() => window.location.reload()}>
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
      </div>
    );
  }
  
  return (
    <div className={styles.menuContainer}>
      <div className={styles.menuContent}>
        <MenuHeader />
        
        <div className={styles.menuItems}>
          <div 
            className={styles.menuItem}
            onClick={() => router.push('/search')}
          >
            <div className={styles.menuIcon}>üîç</div>
            <div className={styles.menuContent}>
              <h2>1. –ü–æ–∏—Å–∫</h2>
              <p>–ù–∞–π—Ç–∏ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–∏–∫–Ω–µ–π–º—É —Å Twitch, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –æ–Ω, —Å–∫–æ–ª—å–∫–æ —É –Ω–µ–≥–æ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤, –Ω–∞ –∫–∞–∫–∏—Ö –æ–±—â–∏—Ö —Å—Ç—Ä–∏–º–µ—Ä–æ–≤ –≤—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã</p>
            </div>
          </div>
          
          <div 
            className={styles.menuItem}
            onClick={() => router.push('/followings')}
          >
            <div className={styles.menuIcon}>üìã</div>
            <div className={styles.menuContent}>
              <h2>2. –í–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª–∏</h2>
              <p>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞–∫–∏—Ö —Å—Ç—Ä–∏–º–µ—Ä–æ–≤ –≤—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ Twitch (—Ñ–æ–ª–ª–æ–≤–∏—Ç–µ)</p>
            </div>
          </div>
          
          <div 
            className={styles.menuItem}
            onClick={() => router.push('/followers')}
          >
            <div className={styles.menuIcon}>üë•</div>
            <div className={styles.menuContent}>
              <h2>3. –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏</h2>
              <p>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—Ç–æ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤–∞—Å –Ω–∞ Streamers Universe (–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏) –∏ –≤–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ</p>
            </div>
          </div>
          
          <div 
            className={styles.menuItem}
            onClick={() => router.push('/reviews')}
          >
            <div className={styles.menuIcon}>‚≠ê</div>
            <div className={styles.menuContent}>
              <h2>4. –û—Ç–∑—ã–≤—ã</h2>
              <p>–û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ —Ç–æ–≤–∞—Ä–∞—Ö, —Å–µ—Ä–≤–∏—Å–∞—Ö –∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö: –ø–µ—Ä–∏—Ñ–µ—Ä–∏—è, –∫–æ–º–ø—å—é—Ç–µ—Ä—ã, –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ</p>
            </div>
          </div>
          
          <div 
            className={styles.menuItem}
            onClick={() => router.push('/questions')}
          >
            <div className={styles.menuIcon}>‚ùì</div>
            <div className={styles.menuContent}>
              <h2>5. –í–æ–ø—Ä–æ—Å—ã</h2>
              <p>–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–µ –≤–∞–º</p>
            </div>
          </div>
          
          <div 
            className={styles.menuItem}
            onClick={() => router.push('/profile')}
          >
            <div className={styles.menuIcon}>üë§</div>
            <div className={styles.menuContent}>
              <h2>6. –ü—Ä–æ—Ñ–∏–ª—å</h2>
              <p>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
} 