'use client';

import React, { useState, useEffect } from 'react';
import styles from './AchievementsSystem.module.css';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
const AchievementsSystem = ({ user, followerCount, isStreamer, streamsCompleted = 0, hasCollaborations = false }) => {
  const [achievements, setAchievements] = useState([]);
  const [unlockedAchievements, setUnlockedAchievements] = useState([]);
  const [showEasterEgg, setShowEasterEgg] = useState(false);
  const [secretClickCount, setSecretClickCount] = useState(0);

  // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  const allAchievements = [
    {
      id: 'first_login',
      title: '–ü–µ—Ä–≤—ã–π —à–∞–≥',
      description: '–í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑',
      icon: 'üö™',
      xp: 10,
      unlocked: true // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ
    },
    {
      id: 'follower_10',
      title: '–ù–∞—á–∞–ª–æ –ø—É—Ç–∏',
      description: '–ù–∞–±–µ—Ä–∏—Ç–µ 10 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤',
      icon: 'üå±',
      xp: 20,
      unlockCondition: () => followerCount >= 10
    },
    {
      id: 'follower_50',
      title: '–†–∞—Å—Ç—É—â–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è',
      description: '–ù–∞–±–µ—Ä–∏—Ç–µ 50 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤',
      icon: 'üåø',
      xp: 50,
      unlockCondition: () => followerCount >= 50
    },
    {
      id: 'follower_100',
      title: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è',
      description: '–ù–∞–±–µ—Ä–∏—Ç–µ 100 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤',
      icon: 'üå≥',
      xp: 100,
      unlockCondition: () => followerCount >= 100
    },
    {
      id: 'follower_200',
      title: '–ü–æ—á—Ç–∏ —É —Ü–µ–ª–∏',
      description: '–ù–∞–±–µ—Ä–∏—Ç–µ 200 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤',
      icon: 'üåü',
      xp: 200,
      unlockCondition: () => followerCount >= 200
    },
    {
      id: 'streamer_status',
      title: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç—Ä–∏–º–µ—Ä',
      description: '–ù–∞–±–µ—Ä–∏—Ç–µ 265 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å—Ç–∞—Ç—É—Å —Å—Ç—Ä–∏–º–µ—Ä–∞',
      icon: 'üëë',
      xp: 265,
      unlockCondition: () => followerCount >= 265,
      reward: '–î–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å—Ç—Ä–∏–º–µ—Ä–∞'
    },
    {
      id: 'streams_5',
      title: '–ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ',
      description: '–ü—Ä–æ–≤–µ–¥–∏—Ç–µ 5 —Å—Ç—Ä–∏–º–æ–≤ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é',
      icon: 'üìÖ',
      xp: 50,
      unlockCondition: () => streamsCompleted >= 5,
      requiresStreamer: true
    },
    {
      id: 'streams_20',
      title: '–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å',
      description: '–ü—Ä–æ–≤–µ–¥–∏—Ç–µ 20 —Å—Ç—Ä–∏–º–æ–≤ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é',
      icon: '‚è∞',
      xp: 150,
      unlockCondition: () => streamsCompleted >= 20,
      requiresStreamer: true
    },
    {
      id: 'collab_first',
      title: '–ö–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏—è',
      description: '–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–∏–º —Å –¥—Ä—É–≥–∏–º —Å—Ç—Ä–∏–º–µ—Ä–æ–º',
      icon: 'ü§ù',
      xp: 100,
      unlockCondition: () => hasCollaborations,
      requiresStreamer: true
    },
    {
      id: 'night_owl',
      title: '–ù–æ—á–Ω–∞—è —Å–æ–≤–∞',
      description: '–í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ 2 —á–∞—Å–æ–≤ –Ω–æ—á–∏',
      icon: 'ü¶â',
      xp: 30,
      isSecret: true,
      unlockCondition: () => {
        const hour = new Date().getHours();
        return hour >= 2 && hour < 5;
      }
    },
    {
      id: 'easter_egg',
      title: '–ü–∞—Å—Ö–∞–ª–æ—á–Ω–∏–∫',
      description: '–í—ã –Ω–∞—à–ª–∏ —Å–µ–∫—Ä–µ—Ç–Ω—É—é –ø–∞—Å—Ö–∞–ª–∫—É!',
      icon: 'ü•ö',
      xp: 50,
      isSecret: true,
      unlockCondition: () => showEasterEgg
    }
  ];

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ª–æ–≤–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  useEffect(() => {
    setAchievements(allAchievements);
    
    const unlocked = allAchievements.filter(achievement => {
      // –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, —Ç—Ä–µ–±—É—é—â–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å—Ç—Ä–∏–º–µ—Ä–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—Ç—Ä–∏–º–µ—Ä
      if (achievement.requiresStreamer && !isStreamer) return false;
      
      // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ª–æ–≤–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
      if (achievement.unlockCondition) {
        return achievement.unlockCondition();
      }
      
      // –ï—Å–ª–∏ —É–∂–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∏–ª–∏ –Ω–µ—Ç —É—Å–ª–æ–≤–∏—è
      return achievement.unlocked || false;
    });
    
    setUnlockedAchievements(unlocked);
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–∞–π–¥–µ–Ω–∞ –ª–∏ –ø–∞—Å—Ö–∞–ª–∫–∞
    if (secretClickCount >= 10) {
      setShowEasterEgg(true);
    }
  }, [followerCount, isStreamer, streamsCompleted, hasCollaborations, secretClickCount]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–∫—Ä—ã—Ç–æ–π –ø–∞—Å—Ö–∞–ª–∫–∏
  const handleSecretClick = () => {
    setSecretClickCount(prev => prev + 1);
  };

  // –†–∞—Å—á–µ—Ç –æ–±—â–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  const calculateProgress = () => {
    const totalAchievements = allAchievements.filter(a => 
      !a.isSecret && (!a.requiresStreamer || isStreamer)).length;
    const unlockedCount = unlockedAchievements.filter(a => !a.isSecret).length;
    return Math.round((unlockedCount / totalAchievements) * 100);
  };

  // –†–∞—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ XP
  const totalXP = unlockedAchievements.reduce((sum, achievement) => sum + achievement.xp, 0);

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ —Å—Ç–∞—Ç—É—Å–∞ —Å—Ç—Ä–∏–º–µ—Ä–∞
  const StreamerProgress = () => {
    if (isStreamer) return (
      <div className={styles.streamerStatus}>
        <h3>–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å—Ç—Ä–∏–º–µ—Ä–∞! üëë</h3>
        <p>–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ç—Ä–∏–º–µ—Ä–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.</p>
      </div>
    );

    const progressPercent = Math.min(100, (followerCount / 265) * 100);
    const remaining = 265 - followerCount;
    
    return (
      <div className={styles.streamerProgressContainer}>
        <h3>–ü—É—Ç—å –∫ —Å—Ç–∞—Ç—É—Å—É —Å—Ç—Ä–∏–º–µ—Ä–∞</h3>
        <div className={styles.progressBar}>
          <div className={styles.progressFill} style={{ width: `${progressPercent}%` }}></div>
        </div>
        <p>{followerCount} –∏–∑ 265 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ ({remaining} –æ—Å—Ç–∞–ª–æ—Å—å)</p>
        
        <div className={styles.streamerTips}>
          <h4>–°–æ–≤–µ—Ç—ã –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –∫–∞–Ω–∞–ª–∞:</h4>
          <ul>
            <li>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∏–º–æ–≤</li>
            <li>–ê–∫—Ç–∏–≤–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Å —á–∞—Ç–æ–º</li>
            <li>–î–µ–ª–∏—Ç–µ—Å—å –∞–Ω–æ–Ω—Å–∞–º–∏ —Å—Ç—Ä–∏–º–æ–≤ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö</li>
            <li>–ù–∞–π–¥–∏—Ç–µ —Å–≤–æ—é –Ω–∏—à—É –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å</li>
            <li>–£–ª—É—á—à–∞–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∑–≤—É–∫–∞ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</li>
          </ul>
          
          {followerCount >= 50 && (
            <div className={styles.unlockedTip}>
              <h4>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–æ–≤–µ—Ç:</h4>
              <p>–°–æ–∑–¥–∞–π—Ç–µ Discord-—Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞</p>
            </div>
          )}
          
          {followerCount >= 100 && (
            <div className={styles.unlockedTip}>
              <h4>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–æ–≤–µ—Ç:</h4>
              <p>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –Ω–æ—á–∞—Ç–∫–∏ –∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –¥–ª—è —Å—Ç—Ä–∏–º–∞</p>
            </div>
          )}
          
          {followerCount >= 200 && (
            <div className={styles.unlockedTip}>
              <h4>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–æ–≤–µ—Ç:</h4>
              <p>–ü–æ–¥—É–º–∞–π—Ç–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</p>
            </div>
          )}
        </div>
      </div>
    );
  };

  return (
    <div className={styles.achievementsContainer}>
      <h2>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å</h2>
      
      <div className={styles.achievementsSummary}>
        <div className={styles.xpCounter}>
          <span className={styles.xpIcon}>‚≠ê</span>
          <span className={styles.xpAmount}>{totalXP} XP</span>
        </div>
        
        <div className={styles.overallProgress}>
          <p>–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: {calculateProgress()}%</p>
          <div className={styles.progressBar}>
            <div 
              className={styles.progressFill} 
              style={{ width: `${calculateProgress()}%` }}
            ></div>
          </div>
        </div>
      </div>
      
      {!isStreamer && <StreamerProgress />}
      
      <div className={styles.achievementsList}>
        <h3>–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
        {unlockedAchievements.length === 0 ? (
          <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π. –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å!</p>
        ) : (
          <div className={styles.achievementsGrid}>
            {unlockedAchievements.map(achievement => (
              <div key={achievement.id} className={styles.achievementCard + ' ' + styles.unlocked}>
                <div className={styles.achievementIcon}>{achievement.icon}</div>
                <h4>{achievement.title}</h4>
                <p>{achievement.description}</p>
                <span className={styles.achievementXp}>+{achievement.xp} XP</span>
                {achievement.reward && (
                  <div className={styles.achievementReward}>
                    <span>–ù–∞–≥—Ä–∞–¥–∞:</span> {achievement.reward}
                  </div>
                )}
              </div>
            ))}
          </div>
        )}
        
        <h3>–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
        <div className={styles.achievementsGrid}>
          {achievements
            .filter(a => 
              !unlockedAchievements.find(ua => ua.id === a.id) && 
              !a.isSecret && 
              (!a.requiresStreamer || isStreamer)
            )
            .map(achievement => (
              <div key={achievement.id} className={styles.achievementCard + ' ' + styles.locked}>
                <div className={styles.achievementIcon + ' ' + styles.faded}>{achievement.icon}</div>
                <h4>{achievement.title}</h4>
                <p>{achievement.description}</p>
                <span className={styles.achievementXp}>+{achievement.xp} XP</span>
              </div>
            ))}
        </div>
        
        {/* –°–µ–∫—Ä–µ—Ç–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –¥–ª—è –ø–∞—Å—Ö–∞–ª–∫–∏ */}
        <div 
          className={styles.easterEggArea} 
          onClick={handleSecretClick}
        ></div>
        
        {/* –°–µ–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ */}
        {unlockedAchievements.some(a => a.isSecret) && (
          <>
            <h3>–°–µ–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
            <div className={styles.achievementsGrid}>
              {unlockedAchievements
                .filter(a => a.isSecret)
                .map(achievement => (
                  <div key={achievement.id} className={`${styles.achievementCard} ${styles.secret} ${styles.unlocked}`}>
                    <div className={styles.achievementIcon}>{achievement.icon}</div>
                    <h4>{achievement.title}</h4>
                    <p>{achievement.description}</p>
                    <span className={styles.achievementXp}>+{achievement.xp} XP</span>
                  </div>
                ))}
            </div>
          </>
        )}
      </div>
    </div>
  );
};

export default AchievementsSystem; 