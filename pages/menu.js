import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import Cookies from 'js-cookie';
import styles from './menu.module.css';

export default function Menu() {
  const router = useRouter();
  const [userData, setUserData] = useState(null);
  const [isStreamer, setIsStreamer] = useState(false);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –∫—É–∫–∏ –∏–ª–∏ localStorage
      const accessToken = Cookies.get('twitch_access_token') || localStorage.getItem('cookie_twitch_access_token');
      if (!accessToken) {
        console.log('–¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        router.push('/auth');
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫—É–∫–∏ –∏–ª–∏ localStorage
      let userDataObj = null;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–∫–∏
      const userCookie = Cookies.get('twitch_user');
      if (userCookie) {
        try {
          userDataObj = JSON.parse(userCookie);
          console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ –∫—É–∫–∏');
        } catch (e) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫—É–∫–∏:', e);
        }
      }
      
      // –ï—Å–ª–∏ –Ω–µ—Ç –≤ –∫—É–∫–∞—Ö, –ø—Ä–æ–≤–µ—Ä—è–µ–º localStorage
      if (!userDataObj) {
        const userLocalStorage = localStorage.getItem('twitch_user') || localStorage.getItem('cookie_twitch_user');
        if (userLocalStorage) {
          try {
            userDataObj = JSON.parse(userLocalStorage);
            console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ localStorage');
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É–∫—É
            if (userDataObj) {
              Cookies.set('twitch_user', JSON.stringify(userDataObj), {
                path: '/',
                secure: window.location.protocol === 'https:',
                sameSite: 'lax',
                maxAge: 60 * 60 * 24 * 7 // 7 –¥–Ω–µ–π
              });
              console.log('–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫—É–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage');
            }
          } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage:', e);
          }
        }
      }
      
      if (userDataObj) {
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const displayName = userDataObj.twitchName || userDataObj.display_name;
        const profileImageUrl = userDataObj.profileImageUrl || userDataObj.profile_image_url;
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        setUserData({
          ...userDataObj,
          display_name: displayName,
          profileImageUrl: profileImageUrl
        });
        
        setIsStreamer(userDataObj.isStreamer || false);
        setLoading(false);
      } else {
        // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏—Ö –∏–∑ API
        console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ API');
        
        fetch('/api/twitch/profile', {
          headers: {
            'Authorization': `Bearer ${accessToken}`
          }
        })
        .then(response => {
          if (response.ok) {
            return response.json();
          }
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è');
        })
        .then(data => {
          console.log('–î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ API:', data);
          
          // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const userData = {
            id: data.id,
            login: data.login || data.twitchName.toLowerCase(),
            display_name: data.twitchName,
            profileImageUrl: data.profileImageUrl,
            isStreamer: data.isStreamer
          };
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          setUserData(userData);
          setIsStreamer(data.isStreamer || false);
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫—É–∫–∏ –∏ localStorage
          Cookies.set('twitch_user', JSON.stringify(userData), {
            path: '/',
            secure: window.location.protocol === 'https:',
            sameSite: 'lax',
            maxAge: 60 * 60 * 24 * 7 // 7 –¥–Ω–µ–π
          });
          
          localStorage.setItem('twitch_user', JSON.stringify(userData));
          localStorage.setItem('cookie_twitch_user', JSON.stringify(userData));
          
          setLoading(false);
        })
        .catch(error => {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è:', error);
          setError('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞.');
          setLoading(false);
        });
      }
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', e);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞.');
      setLoading(false);
    }
  }, [router]);

  const handleMenuItemClick = (path) => {
    try {
      router.push(path);
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É:', path, e);
      alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É ${path}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.`);
    }
  };

  if (loading) {
    return (
      <div className={styles.loading}>
        <div className={styles.spinner}></div>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className={styles.error}>
        <p>{error}</p>
        <button className={styles.button} onClick={() => router.push('/auth')}>
          –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        </button>
      </div>
    );
  }

  if (!userData) {
    return (
      <div className={styles.error}>
        <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</p>
        <button className={styles.button} onClick={() => router.push('/auth')}>
          –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        </button>
      </div>
    );
  }

  return (
    <div className={styles.menuContainer}>
      <div className={styles.header}>
        <h1>Streamers Universe</h1>
        <div className={styles.userInfo}>
          <img 
            src={userData.profileImageUrl} 
            alt={`${userData.twitchName || userData.display_name} –∞–≤–∞—Ç–∞—Ä`} 
            className={styles.avatar}
            onError={(e) => {
              e.currentTarget.src = 'data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" width="200" height="200" viewBox="0 0 200 200"%3E%3Crect width="200" height="200" fill="%237B41C9"%3E%3C/rect%3E%3Ctext x="100" y="100" font-family="Arial" font-size="24" text-anchor="middle" fill="white"%3ENo Image%3C/text%3E%3C/svg%3E';
            }}
          />
          <span>{userData.twitchName || userData.display_name}</span>
        </div>
      </div>

      <div className={styles.menuItems}>
        <div 
          className={styles.menuItem}
          onClick={() => handleMenuItemClick('/search')}
        >
          <div className={styles.menuIcon}>üîç</div>
          <div className={styles.menuContent}>
            <h2>1. –ü–æ–∏—Å–∫</h2>
            <p>–ù–∞–π—Ç–∏ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–∏–∫–Ω–µ–π–º—É —Å Twitch, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –æ–Ω, —Å–∫–æ–ª—å–∫–æ —É –Ω–µ–≥–æ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤, –Ω–∞ –∫–∞–∫–∏—Ö –æ–±—â–∏—Ö —Å—Ç—Ä–∏–º–µ—Ä–æ–≤ –≤—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã</p>
          </div>
        </div>

        <div 
          className={styles.menuItem}
          onClick={() => handleMenuItemClick('/subscriptions')}
        >
          <div className={styles.menuIcon}>üìã</div>
          <div className={styles.menuContent}>
            <h2>2. –ü–æ–¥–ø–∏—Å–∫–∏</h2>
            <p>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞–∫–∏—Ö —Å—Ç—Ä–∏–º–µ—Ä–æ–≤ —Ç—ã –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ Twitch/–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Streamers Universe</p>
          </div>
        </div>

        <div 
          className={styles.menuItem}
          onClick={() => handleMenuItemClick('/followers')}
        >
          <div className={styles.menuIcon}>üë•</div>
          <div className={styles.menuContent}>
            <h2>3. –ü–æ–¥–ø–∏—Å—á–∏–∫–∏</h2>
            <p>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—Ç–æ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —Ç–µ–±—è –≤ Streamers Universe</p>
            {isStreamer && (
              <p className={styles.streamerNote}>–ö–∞–∫ —Å—Ç—Ä–∏–º–µ—Ä, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–∑–Ω–∞—á–∞—Ç—å —Ä–æ–ª–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º: –º–æ–¥–µ—Ä–∞—Ç–æ—Ä, –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫</p>
            )}
          </div>
        </div>

        <div 
          className={styles.menuItem}
          onClick={() => handleMenuItemClick('/profile')}
        >
          <div className={styles.menuIcon}>üë§</div>
          <div className={styles.menuContent}>
            <h2>4. –ü—Ä–æ—Ñ–∏–ª—å</h2>
            <p>–¢–≤–æ—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª—è</p>
          </div>
        </div>

        <div 
          className={styles.menuItem}
          onClick={() => handleMenuItemClick('/settings')}
        >
          <div className={styles.menuIcon}>‚öôÔ∏è</div>
          <div className={styles.menuContent}>
            <h2>5. –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
            <p>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–º–µ–Ω–∏—Ç—å —Ç–µ–º—É (—Ç—ë–º–Ω–∞—è/—Å–≤–µ—Ç–ª–∞—è), –ø–æ–º–µ–Ω—è—Ç—å —à—Ä–∏—Ñ—Ç, —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å, —è–∑—ã–∫ –∏ –¥—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</p>
          </div>
        </div>
      </div>
    </div>
  );
} 